#########################################
#   test the integer_validator method   #
#########################################

>>> BG = __import__('7-base_geometry').BaseGeometry
>>> bg = BG()
>>> bg.integer_validator("string", "Error")
Traceback (most recent call last):
...
TypeError: string must be an integer
>>> bg.integer_validator("string", -69)
Traceback (most recent call last):
...
ValueError: string must be greater than 0
>>> bg.integer_validator("string", 0)
Traceback (most recent call last):
...
ValueError: string must be greater than 0
>>> bg.integer_validator("string", 1)
>>> bg.integer_validator("string", 69)
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator(“age”, (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator(“age”, [3])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator(“age”, True)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> ng.integer_validator(“age”, {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator(“age”, None)
Traceback (most recent call last):
...
TypeError: age must be an integer

